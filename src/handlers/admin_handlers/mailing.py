import asyncio
import random
import os

from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter
from aiogram.fsm.state import default_state
from aiogram import Bot, types, Router
from aiogram.filters import Command
from aiogram.exceptions import TelegramForbiddenError, TelegramBadRequest

from src.db import customer_db, store_db
from src.keyboards import admin_kb, main_kb


router = Router(name=__name__)


@router.message((Command('m')))
async def create_mail_group(message: types.Message, bot: Bot):
    user_info = await customer_db.get_user_info_by_id(
        user_id=message.chat.id
    )
    store_info = await store_db.get_store_info()
    if user_info.admin:
        await bot.send_photo(
            chat_id=store_info.sale_group,
            photo=message.photo[-1].file_id,
            caption=message.caption[2:],
            reply_markup=admin_kb.create_kb_sale_group()
        )

        await message.answer(
            text='–ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ',
            reply_markup=await main_kb.create_kb_main(
                language=message.from_user.language_code,
                user_id=message.chat.id
            )
        )
    else:
        await message.answer(
            text='–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞',
            reply_markup=await main_kb.create_kb_main(
                language=message.from_user.language_code,
                user_id=message.chat.id
            )
        )


@router.message((Command('mail')))
async def create_mail_chats(message: types.Message,
                            bot: Bot,
                            state: FSMContext):
    user_info = await customer_db.get_user_info_by_id(
        user_id=message.chat.id
    )

    # store_info = await store_db.get_store_info()
    customer_list = await customer_db.db_get_users_list()
    if user_info.admin:
        for user_data in customer_list:
            try:
                await bot.send_message(
                    chat_id=user_data.user_id,
                    text="–î—Ä—É–∑—å—è, —É –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤—ã—à–ª–æ –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:\n"
                    "üåê –ù–∞—à–µ –º–µ–Ω—é –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–∞—Ö (—è–∑—ã–∫ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–∞—à–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞)!\n"
                    "üî• –î–æ–±–∞–≤–∏–ª–∏ —Ä–∞–∑–¥–µ–ª '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ' - —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –ª—É—á—à–∏–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏!\n"
                    "üçΩ –í –º–µ–Ω—é –±–æ—Ç–∞ –≤—Å–µ–≥–¥–∞ —Ç–æ–ª—å–∫–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –±–ª—é–¥–∞!\n"
                    "üõí –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–∏–ª–∏ —Ä–∞–∑–¥–µ–ª '–ú–∞–≥–∞–∑–∏–Ω', –≥–¥–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã, –æ—Ç –∑–∞–º–æ—Ä–æ–∑–æ–∫ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –¥–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö –∫—É—Ä–∏–ª–æ–∫.\n\n"
                    "–ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –Ω–æ–≤–∏–Ω–∫–∏! –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –∏ –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞! ü•Ç",
                    reply_markup=await main_kb.create_kb_main(
                        language='ru', user_id=user_data.user_id
                    )
                )

            except TelegramForbiddenError:
                continue
            except Exception:
                continue
        await message.answer(
            text='–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.'
        )
    else:
        await message.answer(
            text='–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞',
            reply_markup=await main_kb.create_kb_main(
                language=message.from_user.language_code,
                user_id=message.chat.id
            )
        )


@router.message((Command('13')))
async def create_mail_group_auto(bot: Bot):
    max_retries = 5
    for attempt in range(max_retries):
        try:
            store_info = await store_db.get_store_info(store_id=1)

            text = ('–í—Å–µ–º —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è üî•\n'
                    '–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Marcello üëá\n'
                    '–ü—Ä–∏ –∑–∞–∫–∞–∑–µ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Å–∫–∏–¥–∫–∞ –Ω–∞ –≤—Å–µ –º–µ–Ω—é 5% üëç')

            current_dir = os.path.dirname(os.path.abspath(__file__))

            static_folder = os.path.join(current_dir, '../..', 'static')

            file_list = os.listdir(static_folder)

            random_file = random.choice(file_list)

            random_file_path = os.path.join(static_folder, random_file)

            photo_file = types.FSInputFile(random_file_path)

            await bot.send_photo(
                chat_id=store_info.sale_group,
                photo=photo_file,
                caption=text,
                reply_markup=admin_kb.create_kb_sale_group()
            )
            break
        except TelegramBadRequest:
            if attempt < max_retries - 1:
                await asyncio.sleep(1)
            else:
                pass
